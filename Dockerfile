# Generated by Neurodocker and Reproenv.

FROM continuumio/miniconda:4.7.12
ENV LANG="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8" \
    ND_ENTRYPOINT="/neurodocker/startup.sh"
RUN export ND_ENTRYPOINT="/neurodocker/startup.sh" \
    && apt-get --allow-releaseinfo-change update -qq \
    && apt-get install -y -q --no-install-recommends \
           apt-utils \
           bzip2 \
           ca-certificates \
           curl \
           locales \
           unzip \
    && rm -rf /var/lib/apt/lists/* \
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && update-locale LANG="en_US.UTF-8" \
    && chmod 777 /opt && chmod a+s /opt \
    && mkdir -p /neurodocker \
    && if [ ! -f "$ND_ENTRYPOINT" ]; then \
         echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT" \
    &&   echo 'set -e' >> "$ND_ENTRYPOINT" \
    &&   echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT" \
    &&   echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT"; \
    fi \
    && chmod -R 777 /neurodocker && chmod a+s /neurodocker
ENV OS="Linux" \
    PATH="/opt/freesurfer-7.4.1/bin:/opt/freesurfer-7.4.1/fsfast/bin:/opt/freesurfer-7.4.1/tktools:/opt/freesurfer-7.4.1/mni/bin:$PATH" \
    FREESURFER_HOME="/opt/freesurfer-7.4.1" \
    FREESURFER="/opt/freesurfer-7.4.1" \
    SUBJECTS_DIR="/opt/freesurfer-7.4.1/subjects" \
    LOCAL_DIR="/opt/freesurfer-7.4.1/local" \
    FSFAST_HOME="/opt/freesurfer-7.4.1/fsfast" \
    FMRI_ANALYSIS_DIR="/opt/freesurfer-7.4.1/fsfast" \
    FUNCTIONALS_DIR="/opt/freesurfer-7.4.1/sessions" \
    FS_OVERRIDE="0" \
    FIX_VERTEX_AREA="" \
    FSF_OUTPUT_FORMAT="nii.gz" \
    MINC_BIN_DIR="/opt/freesurfer-7.4.1/mni/bin" \
    MINC_LIB_DIR="/opt/freesurfer-7.4.1/mni/lib" \
    MNI_DIR="/opt/freesurfer-7.4.1/mni" \
    MNI_DATAPATH="/opt/freesurfer-7.4.1/mni/data" \
    MNI_PERL5LIB="/opt/freesurfer-7.4.1/mni/share/perl5" \
    PERL5LIB="/opt/freesurfer-7.4.1/mni/share/perl5"
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           bc \
           ca-certificates \
           curl \
           libgomp1 \
           libxmu6 \
           libxt6 \
           perl \
           tcsh \
    && rm -rf /var/lib/apt/lists/* \
    && echo "Downloading FreeSurfer ..." \
    && mkdir -p /opt/freesurfer-7.4.1 \
    && curl -fL https://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/7.4.1/freesurfer-linux-centos7_x86_64-7.4.1.tar.gz \
    | tar -xz -C /opt/freesurfer-7.4.1 --owner root --group root --no-same-owner --transform='s,freesurfer/,,' \
         --exclude='average/mult-comp-cor' \
         --exclude='lib/cuda' \
         --exclude='lib/qt' \
         --exclude='subjects/V1_average' \
         --exclude='subjects/bert' \
         --exclude='subjects/cvs_avg35' \
         --exclude='subjects/cvs_avg35_inMNI152' \
         --exclude='subjects/fsaverage3' \
         --exclude='subjects/fsaverage4' \
         --exclude='subjects/fsaverage5' \
         --exclude='subjects/fsaverage6' \
         --exclude='subjects/fsaverage_sym' \
         --exclude='trctrain'
ENV LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu:/opt/MCRv84/v84/runtime/glnxa64:/opt/MCRv84/v84/bin/glnxa64:/opt/MCRv84/v84/sys/os/glnxa64:/opt/MCRv84/v84/extern/bin/glnxa64" \
    MATLABCMD="/opt/MCRv84/2014b/toolbox/matlab" \
    XAPPLRESDIR="/opt//opt/MCRv84/v84/x11/app-defaults" \
    MCRROOT="/opt/MCRv84/2014b"


RUN export TMPDIR="$(mktemp -d)" \
		&& mkdir -p /usr/share/man/man1 \
    && apt-get update -qq \
    && apt-get install -y -q --no-install-recommends --fix-missing\
           bc \
           curl \
           dbus-x11 \
           libncurses5 \
           libxext6 \
           libxmu6 \
           libxpm-dev \
           default-jre \
           libxt6 \
           unzip \
    && rm -rf /var/lib/apt/lists/* \
    && echo "Downloading MATLAB Compiler Runtime ..." \
    && curl  -o "$TMPDIR/mcr.zip" https://ssd.mathworks.com/supportfiles/downloads/R2014b/deployment_files/R2014b/installers/glnxa64/MCR_R2014b_glnxa64_installer.zip \
    && unzip -q "$TMPDIR/mcr.zip" -d "$TMPDIR/mcrtmp" \
    && "$TMPDIR/mcrtmp/install" -destinationFolder /opt/MCRv84 -mode silent -agreeToLicense yes \
    && rm -rf "$TMPDIR" \
    && unset TMPDIR
RUN ln -s /opt/MCRv84/v84 /opt/freesurfer-7.4.1/MCRv84

# Install OpenSSH server
RUN apt-get update && apt-get install -y openssh-server && \
    mkdir /var/run/sshd && \
    echo 'root:password' | chpasswd && \
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
    sed -i 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' /etc/pam.d/sshd

# Copy license.txt and set FS_LICENSE
COPY license.txt /opt/license.txt
ENV FS_LICENSE=/opt/license.txt

# Copy /dataset folder and set SUBJECTS_DIR
COPY dataset /opt/dataset
ENV SUBJECTS_DIR=/opt/dataset

# Expose SSH port
EXPOSE 22

# Start SSH server on container launch
CMD ["/usr/sbin/sshd", "-D"]

ENTRYPOINT ["/neurodocker/startup.sh"]

# Save specification to JSON.
RUN printf '{ \
  "pkg_manager": "apt", \
  "existing_users": [ \
    "root" \
  ], \
  "instructions": [ \
    { \
      "name": "from_", \
      "kwds": { \
        "base_image": "continuumio/miniconda:4.7.12" \
      } \
    }, \
    { \
      "name": "env", \
      "kwds": { \
        "LANG": "en_US.UTF-8", \
        "LC_ALL": "en_US.UTF-8", \
        "ND_ENTRYPOINT": "/neurodocker/startup.sh" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "export ND_ENTRYPOINT=\\"/neurodocker/startup.sh\\"\\napt-get update -qq\\napt-get install -y -q --no-install-recommends \\\\\\n    apt-utils \\\\\\n    bzip2 \\\\\\n    ca-certificates \\\\\\n    curl \\\\\\n    locales \\\\\\n    unzip\\nrm -rf /var/lib/apt/lists/*\\nsed -i -e '"'"'s/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/'"'"' /etc/locale.gen\\ndpkg-reconfigure --frontend=noninteractive locales\\nupdate-locale LANG=\\"en_US.UTF-8\\"\\nchmod 777 /opt && chmod a+s /opt\\nmkdir -p /neurodocker\\nif [ ! -f \\"$ND_ENTRYPOINT\\" ]; then\\n  echo '"'"'#!/usr/bin/env bash'"'"' >> \\"$ND_ENTRYPOINT\\"\\n  echo '"'"'set -e'"'"' >> \\"$ND_ENTRYPOINT\\"\\n  echo '"'"'export USER=\\"${USER:=`whoami`}\\"'"'"' >> \\"$ND_ENTRYPOINT\\"\\n  echo '"'"'if [ -n \\"$1\\" ]; then \\"$@\\"; else /usr/bin/env bash; fi'"'"' >> \\"$ND_ENTRYPOINT\\";\\nfi\\nchmod -R 777 /neurodocker && chmod a+s /neurodocker" \
      } \
    }, \
    { \
      "name": "env", \
      "kwds": { \
        "OS": "Linux", \
        "PATH": "/opt/freesurfer-7.4.1/bin:/opt/freesurfer-7.4.1/fsfast/bin:/opt/freesurfer-7.4.1/tktools:/opt/freesurfer-7.4.1/mni/bin:$PATH", \
        "FREESURFER_HOME": "/opt/freesurfer-7.4.1", \
        "FREESURFER": "/opt/freesurfer-7.4.1", \
        "SUBJECTS_DIR": "/opt/freesurfer-7.4.1/subjects", \
        "LOCAL_DIR": "/opt/freesurfer-7.4.1/local", \
        "FSFAST_HOME": "/opt/freesurfer-7.4.1/fsfast", \
        "FMRI_ANALYSIS_DIR": "/opt/freesurfer-7.4.1/fsfast", \
        "FUNCTIONALS_DIR": "/opt/freesurfer-7.4.1/sessions", \
        "FS_OVERRIDE": "0", \
        "FIX_VERTEX_AREA": "", \
        "FSF_OUTPUT_FORMAT": "nii.gz", \
        "MINC_BIN_DIR": "/opt/freesurfer-7.4.1/mni/bin", \
        "MINC_LIB_DIR": "/opt/freesurfer-7.4.1/mni/lib", \
        "MNI_DIR": "/opt/freesurfer-7.4.1/mni", \
        "MNI_DATAPATH": "/opt/freesurfer-7.4.1/mni/data", \
        "MNI_PERL5LIB": "/opt/freesurfer-7.4.1/mni/share/perl5", \
        "PERL5LIB": "/opt/freesurfer-7.4.1/mni/share/perl5" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "apt-get update -qq\\napt-get install -y -q --no-install-recommends \\\\\\n    bc \\\\\\n    ca-certificates \\\\\\n    curl \\\\\\n    libgomp1 \\\\\\n    libxmu6 \\\\\\n    libxt6 \\\\\\n    perl \\\\\\n    tcsh\\nrm -rf /var/lib/apt/lists/*\\necho \\"Downloading FreeSurfer ...\\"\\nmkdir -p /opt/freesurfer-7.4.1\\ncurl -fL https://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/7.4.1/freesurfer-linux-centos7_x86_64-7.4.1.tar.gz \\\\\\n| tar -xz -C /opt/freesurfer-7.4.1 --owner root --group root --no-same-owner --transform='"'"'s,freesurfer/,,'"'"' \\\\\\n  --exclude='"'"'average/mult-comp-cor'"'"' \\\\\\n  --exclude='"'"'lib/cuda'"'"' \\\\\\n  --exclude='"'"'lib/qt'"'"' \\\\\\n  --exclude='"'"'subjects/V1_average'"'"' \\\\\\n  --exclude='"'"'subjects/bert'"'"' \\\\\\n  --exclude='"'"'subjects/cvs_avg35'"'"' \\\\\\n  --exclude='"'"'subjects/cvs_avg35_inMNI152'"'"' \\\\\\n  --exclude='"'"'subjects/fsaverage3'"'"' \\\\\\n  --exclude='"'"'subjects/fsaverage4'"'"' \\\\\\n  --exclude='"'"'subjects/fsaverage5'"'"' \\\\\\n  --exclude='"'"'subjects/fsaverage6'"'"' \\\\\\n  --exclude='"'"'subjects/fsaverage_sym'"'"' \\\\\\n  --exclude='"'"'trctrain'"'"'" \
      } \
    }, \
    { \
      "name": "env", \
      "kwds": { \
        "LD_LIBRARY_PATH": "$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu:/opt/MCRv84/v84/runtime/glnxa64:/opt/MCRv84/v84/bin/glnxa64:/opt/MCRv84/v84/sys/os/glnxa64:/opt/MCRv84/v84/extern/bin/glnxa64", \
        "MATLABCMD": "/opt/MCRv84/2014b/toolbox/matlab", \
        "XAPPLRESDIR": "/opt//opt/MCRv84/v84/x11/app-defaults", \
        "MCRROOT": "/opt/MCRv84/2014b" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "export TMPDIR=\\"$\(mktemp -d\)\\"\\napt-get update -qq\\napt-get install -y -q --no-install-recommends \\\\\\n    bc \\\\\\n    curl \\\\\\n    dbus-x11 \\\\\\n    libncurses5 \\\\\\n    libxext6 \\\\\\n    libxmu6 \\\\\\n    libxpm-dev \\\\\\n    libxt6 \\\\\\n    openjdk-8-jre \\\\\\n    unzip\\nrm -rf /var/lib/apt/lists/*\\necho \\"Downloading MATLAB Compiler Runtime ...\\"\\ncurl  -o \\"$TMPDIR/mcr.zip\\" https://ssd.mathworks.com/supportfiles/downloads/R2014b/deployment_files/R2014b/installers/glnxa64/MCR_R2014b_glnxa64_installer.zip\\nunzip -q \\"$TMPDIR/mcr.zip\\" -d \\"$TMPDIR/mcrtmp\\"\\n\\"$TMPDIR/mcrtmp/install\\" -destinationFolder /opt/MCRv84 -mode silent -agreeToLicense yes\\nrm -rf \\"$TMPDIR\\"\\nunset TMPDIR" \
      } \
    }, \
    { \
      "name": "run", \
      "kwds": { \
        "command": "ln -s /opt/MCRv84/v84 /opt/freesurfer-7.0.0/MCRv84" \
      } \
    }, \
    { \
      "name": "entrypoint", \
      "kwds": { \
        "args": [ \
          "/neurodocker/startup.sh" \
        ] \
      } \
    } \
  ] \
}' > /.reproenv.json
# End saving to specification to JSON.
